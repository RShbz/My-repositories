package com.demiroren.service.business;

import java.util.Optional;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.demiroren.dto.request.AddContactRequest;
import com.demiroren.dto.response.AddContactResponse;
import com.demiroren.entity.Contact;
import com.demiroren.repository.ContactRepository;
import com.demiroren.repository.PhoneRepository;
import com.demiroren.service.ContactService;

/**
 * @author Remzi ÅžAHBAZ
 *
 */
@Service
public class StandartContactService implements ContactService {

	private ModelMapper modelmapper;
	private ContactRepository contactRepository;
	private PhoneRepository phoneRepository;

	/**
	 * @param modelmapper
	 * @param contactRepository
	 * @param phoneRepository
	 */
	public StandartContactService(ModelMapper modelmapper, ContactRepository contactRepository,
			PhoneRepository phoneRepository) {
		this.modelmapper = modelmapper;
		this.contactRepository = contactRepository;
		this.phoneRepository = phoneRepository;
	}

	@Override
	public Optional<AddContactResponse> addContact(AddContactRequest request) {

		var existContact = contactRepository.findByNameAndLastName(request.getName(), request.getLastName());

		if (existContact != null) {

			
			return modelmapper.map(request, AddContactResponse.class);

		}

		else {
			try {
				var newContact = contactRepository.save(modelmapper.map(request, Contact.class));

				System.out.println(modelmapper.map(newContact, AddContactResponse.class));
				return modelmapper.map(newContact, AddContactResponse.class);

			} catch (Exception e) {
				throw new IllegalAccessError();
			}
		}

	}

	@Override
	public AddContactResponse getContact(String name, String lastName) {
		var getContact = contactRepository.findByNameAndLastName(name, lastName);
		if (getContact != null) {

			return modelmapper.map(getContact, AddContactResponse.class);

		}
		return null;
	}

}
